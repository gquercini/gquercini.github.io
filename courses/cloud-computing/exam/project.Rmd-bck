---
linktitle: cc-exam-project
summary: Project


title: Project
heading: "Cloud computing \u2014 Final project"
draft: false  
type: docs

output:
    blogdown::html_page:
        number_sections: false

menu:
  course:
    name: Final project
    parent: exam
    weight: 2

---

<link rel="stylesheet" href="/styles/course.css">
<link rel="stylesheet" href="/styles/cloud-computing.css">

# Introduction

The **objective** of this project is to assess 
your ability of building and sharing images in Docker.
The project consists of five steps:

1. Choose an application.
2. Package your application into one or more Docker images.
3. Ship your image(s) to the DockerHub registry.
4. Write a documentation.
5. Submit your project. 

In the following sections, you'll find the details of each step.

If you have questions, doubts, need of help, don't hesitate 
to contact me anytime in the MS Teams space.

# Choose an application

In this step, you'll need to select an application **of your choice**.
Examples include:

* An application that you developed in the past 
in another course (does the phrase *coding weeks* ring a bell?). 

* An application that you develop from scratch specifically for 
this project. That's a bit ambitious, but if you feel like challenging 
yourself, why not?

* An application developed by a friend of yours.

* An application that you found on the internet. A good place
to look at is [GitHub](https://github.com){target="_blank"}.

The application may be written in any programming language. 

# Package your application

Your application must be **packaged** as a **Docker image**, or **a set of Docker images**, if the application is composed of many independent services.

## Recommendations

* Create a directory on your computer named after 
your application (e.g., *sample-app*).

* If your application is monolithic 
(i.e., it's not composed of many services), put everything into 
this directory (including the Dockerfile).

* If your application consists of many independent services, create 
a subdirectory for each service, containing everything needed to run 
that service (as well as the Dockerfile). 

In case your application is composed of many independent services, 
you might also want to create a 
**docker-compose file** with the instructions to run the application 
(you'd greatly simplify my life!). 
However, writing a docker-compose is **not** mandatory.

# Ship your image(s).

Upload your image(s) to the DockerHub registry.
In the following instructions I show the Docker commands to
upload an image named *test-image* to 
my DockerHub registry (my username is *quercinigia*).
Of course, when you'll type these Docker commands yourselves, 
you'll have to use your username and your image's name.

For your convenience, in my last lecture I 
showed a full demo of the procedure, that 
you can watch 
in [in this video](https://web.microsoftstream.com/video/f7c15e3f-3393-484c-9a75-c030842ab5d6){target="_blank"}, 
starting at minute 37.


* If you haven't done so yet, create an account 
on [DockerHub](https://hub.docker.com){target="_blank"}.

* From the command-line terminal, I log into my DockerHub account. 
One way to do so is the following:

  + I created a file *docker_pwd.txt*  containing 
    my password. 

  + In the terminal, I place myself in the same directory as 
  the file *docker_pwd.txt* and I type the following command:

```
cat docker_pwd.txt | docker login --username quercinigia --password-stdin
```

* I tag the image to upload with my DockerHub username, as follows:

```
docker image tag test_image quercinigia/test_image:1.0
```

* Finally, I push the image to the DockerHub registry:

```
docker image push quercinigia/test_image:1.0
```

# Write a documentation

The documentation must be concise (max 4 pages).
It must include:

* Your name and family name.
* Short description of the application that you chose.
* The description of the Dockerfile, specifying the meaning of 
each instruction.
* The instructions that I have to follow to pull your image(s) from 
the DockerHub registry and run them.

The last point is particularly important as I have to verify 
that everything works as expected.

# Submit your project

You'll submit your project on Edunao 
(click on [this link](https://centralesupelec.edunao.com/mod/assign/view.php?id=22011){target="_blank"}).

**Deadline.** June 6, 2020, 23:59.

Depending on the application that you chose, 
two cases are possible:

1. Your application consists of **only one Docker image**.
In this case, you may just upload **the documentation in PDF**.

2. You application consists of **many images** 
and you have created a **docker-compose** file, 
or you need to send additional files. 
In this case, 
you can upload an **archive file**
(accepted formats include .zip .7z .bdoc .cdoc .ddoc .gtar .gz .gzip .hqx .rar .sit .tar .tgz),
containing **the documentation in PDF** as well as the other files.

In any case, **do not submit** 
the source code of your application. 


